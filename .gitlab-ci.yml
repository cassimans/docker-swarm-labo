variables:
  GROUP_ID: be/lampiris/demo
  PROJECT: docker-swarm
  VERSION: 1.0.0

stages:
  - deploy

#swarm-install:
#  stage: deploy
#  variables:
#    SERVICE_HOST: $OPEN_STACK_HOST
#    SERVICE_USER: $OPEN_STACK_USER
#    SERVICE_PASSWORD: $OPEN_STACK_PASSWORD
#    SERVICE_NAME: swarm
#  image: docker:latest
#  script:
#    - cd .deployment
#    - ansible-playbook deploy.yml -i inventory --extra-vars "vm_name=$SERVICE_NAME openstack_url=$SERVICE_HOST openstack_user=$SERVICE_USER openstack_password=$SERVICE_PASSWORD"
#  environment:
#    name: master
#    url: http://${OPEN_STACK_HOST}/horizon
#  when: manual
#  only:
#    - master

.swarm-deploy: &swarm-deploy
  stage: deploy
  variables:
    DOCKER_HOST: tcp://$ACTIVATION_SWARM_HOST_1
    SERVICE_NAME: default-app
  image: docker:latest
  script:
    - docker -H $DOCKER_HOST ps
  environment:
    name: master
    url: http://${CI_ENVIRONMENT_SLUG}-${SERVICE_NAME}-voting-app.activation.lampiris.io
#    url: http://${CI_ENVIRONMENT_SLUG}-${SERVICE_NAME}-result-app.activation.lampiris.io
  when: manual
  only:
    - master
    - /^feature.*$/

swarm-deploy-voteapp:
  <<: *swarm-deploy
  variables:
    DOCKER_HOST: tcp://$ACTIVATION_SWARM_HOST_1
    SERVICE_NAME: vote-app
  script:
    - echo ${CI_ENVIRONMENT_SLUG}-${SERVICE_NAME}
    - docker -H $DOCKER_HOST ps
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker stack deploy --compose-file=./vote-app/docker-compose.yml ${CI_ENVIRONMENT_SLUG}-${SERVICE_NAME}

swarm-undeploy-voteapp:
  <<: *swarm-deploy
  variables:
    DOCKER_HOST: tcp://$ACTIVATION_SWARM_HOST_1
    SERVICE_NAME: vote-app
  script:
    - docker -H $DOCKER_HOST ps
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker stack rm ${CI_ENVIRONMENT_SLUG}-${SERVICE_NAME}
